// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int @id @default(autoincrement())
  email       String @unique
  password    String

  Credentials Credential[]
  Notes       Note[]
  Cards       Card[]
  Wifi        Wifi[]
  Documents   Document[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("users")
}

model Credential {
  id         Int @id @default(autoincrement())
  title      String
  url        String
  username   String
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userId     Int
  user       User @relation(fields: [userId], references: [id]) 

  @@unique([userId, title])
  @@map("credentials")
}

model Note {
  id         Int @id @default(autoincrement())
  title      String @unique
  content    String 
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userId     Int
  user       User @relation(fields: [userId], references: [id]) 

  @@unique([userId, title])
  @@map("notes")
}

model Card{
  id             Int @id @default(autoincrement())
  title          String
  number         String
  cardholderName String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           CARD_TYPE
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
    
  userId         Int
  user           User @relation(fields: [userId], references: [id]) 

  @@unique([userId, title])
  @@map("cards")
}

model Wifi {
  id        Int    @id @default(autoincrement())
  title     String
  network   String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  userId    Int
  user      User @relation(fields: [userId], references: [id]) 
    
  @@unique([userId, title])
  @@map("wifis")
}

model Document {
  id        Int     @id @default(autoincrement())
  number    String  @unique
  type      DOC_TYPE

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  
  userId    Int
  user      User @relation(fields: [userId], references: [id]) 

  @@unique([userId, type])
  @@map("documents")
}

enum CARD_TYPE {
  CREDIT
  DEBIT
  BOTH
}

enum DOC_TYPE {
  RG
  CNH
}
